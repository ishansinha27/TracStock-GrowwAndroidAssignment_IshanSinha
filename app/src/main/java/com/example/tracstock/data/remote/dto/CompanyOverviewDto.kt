package com.example.tracstock.data.remote.dto

import com.example.tracstock.domain.model.CompanyOverview
import com.google.gson.annotations.SerializedName

data class CompanyOverviewDto(
    @SerializedName("Symbol") val symbol: String?,
    @SerializedName("AssetType") val assetType: String?,
    @SerializedName("Name") val name: String?,
    @SerializedName("Description") val description: String?,
    @SerializedName("CIK") val cik: String?,
    @SerializedName("Exchange") val exchange: String?,
    @SerializedName("Currency") val currency: String?,
    @SerializedName("Country") val country: String?,
    @SerializedName("Sector") val sector: String?,
    @SerializedName("Industry") val industry: String?,
    @SerializedName("Address") val address: String?,
    @SerializedName("FiscalYearEnd") val fiscalYearEnd: String?,
    @SerializedName("LatestQuarter") val latestQuarter: String?,
    @SerializedName("MarketCapitalization") val marketCapitalization: String?,
    @SerializedName("EBITDA") val ebitda: String?,
    @SerializedName("PERatio") val peRatio: String?,
    @SerializedName("PEGRatio") val pegRatio: String?,
    @SerializedName("BookValue") val bookValue: String?,
    @SerializedName("DividendYield") val dividendYield: String?,
    @SerializedName("EPS") val eps: String?,
    @SerializedName("RevenuePerShareTTM") val revenuePerShareTTM: String?,
    @SerializedName("ProfitMargin") val profitMargin: String?,
    @SerializedName("OperatingMarginTTM") val operatingMarginTTM: String?,
    @SerializedName("ReturnOnAssetsTTM") val returnOnAssetsTTM: String?,
    @SerializedName("ReturnOnEquityTTM") val returnOnEquityTTM: String?,
    @SerializedName("RevenueTTM") val revenueTTM: String?,
    @SerializedName("GrossProfitTTM") val grossProfitTTM: String?,
    @SerializedName("DilutedEPSTTM") val dilutedEPSTTM: String?,
    @SerializedName("QuarterlyEarningsGrowthYOY") val quarterlyEarningsGrowthYOY: String?,
    @SerializedName("QuarterlyRevenueGrowthYOY") val quarterlyRevenueGrowthYOY: String?,
    @SerializedName("AnalystTargetPrice") val analystTargetPrice: String?,
    @SerializedName("TrailingPE") val trailingPE: String?,
    @SerializedName("ForwardPE") val forwardPE: String?,
    @SerializedName("PriceToSalesRatioTTM") val priceToSalesRatioTTM: String?,
    @SerializedName("PriceToBookRatio") val priceToBookRatio: String?,
    @SerializedName("EVToRevenue") val evToRevenue: String?,
    @SerializedName("EVToEBITDA") val evToEBITDA: String?,
    @SerializedName("Beta") val beta: String?,
    @SerializedName("52WeekHigh") val high52Week: String?,
    @SerializedName("52WeekLow") val low52Week: String?,
    @SerializedName("50DayMovingAverage") val movingAverage50Day: String?,
    @SerializedName("200DayMovingAverage") val movingAverage200Day: String?,
    @SerializedName("SharesOutstanding") val sharesOutstanding: String?,
    @SerializedName("DividendDate") val dividendDate: String?,
    @SerializedName("ExDividendDate") val exDividendDate: String?
)

fun CompanyOverviewDto.toCompanyOverview(): CompanyOverview {
    return CompanyOverview(
        symbol = symbol ?: "",
        assetType = assetType ?: "",
        name = name ?: "",
        description = description ?: "",
        cik = cik ?: "",
        exchange = exchange ?: "",
        currency = currency ?: "",
        country = country ?: "",
        sector = sector ?: "",
        industry = industry ?: "",
        address = address ?: "",
        fiscalYearEnd = fiscalYearEnd ?: "",
        latestQuarter = latestQuarter ?: "",
        marketCapitalization = marketCapitalization ?: "",
        ebitda = ebitda ?: "",
        peRatio = peRatio ?: "",
        pegRatio = pegRatio ?: "",
        bookValue = bookValue ?: "",
        dividendYield = dividendYield ?: "",
        eps = eps ?: "",
        revenuePerShareTTM = revenuePerShareTTM ?: "",
        profitMargin = profitMargin ?: "",
        operatingMarginTTM = operatingMarginTTM ?: "",
        returnOnAssetsTTM = returnOnAssetsTTM ?: "",
        returnOnEquityTTM = returnOnEquityTTM ?: "",
        revenueTTM = revenueTTM ?: "",
        grossProfitTTM = grossProfitTTM ?: "",
        dilutedEPSTTM = dilutedEPSTTM ?: "",
        quarterlyEarningsGrowthYOY = quarterlyEarningsGrowthYOY ?: "",
        quarterlyRevenueGrowthYOY = quarterlyRevenueGrowthYOY ?: "",
        analystTargetPrice = analystTargetPrice ?: "",
        trailingPE = trailingPE ?: "",
        forwardPE = forwardPE ?: "",
        priceToSalesRatioTTM = priceToSalesRatioTTM ?: "",
        priceToBookRatio = priceToBookRatio ?: "",
        evToRevenue = evToRevenue ?: "",
        evToEBITDA = evToEBITDA ?: "",
        beta = beta ?: "",
        high52Week = high52Week ?: "",
        low52Week = low52Week ?: "",
        movingAverage50Day = movingAverage50Day ?: "",
        movingAverage200Day = movingAverage200Day ?: "",
        sharesOutstanding = sharesOutstanding ?: "",
        dividendDate = dividendDate ?: "",
        exDividendDate = exDividendDate ?: ""
    )
}
